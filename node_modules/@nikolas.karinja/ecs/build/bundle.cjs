"use strict";function t(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(s){if("default"!==s){var n=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,n.get?n:{enumerable:!0,get:function(){return t[s]}})}})),e.default=t,Object.freeze(e)}Object.defineProperty(exports,"__esModule",{value:!0});var e=t(require("@nikolas.karinja/app-utils"));class s{constructor(t){this.Parent=t,this.active=!0,s.prototype.$Props.instance++}destroy(){}initComponent(){}initEntity(){}onUpdate(t,e){}onAnimUpdate(t,e){}get Manager(){return this.Parent.Manager}findEntity(t){return this.Parent.findEntity(t)}getComponent(t){return this.Parent.getComponent(t)}isActive(){return!!this.active}setActive(t=!0){this.active=t}setParent(t){this.Parent=t}update(t,e,s){this.onUpdate(t,e),s&&this.onAnimUpdate(t,e)}}s.prototype.$Props={instance:0,isECSComponent:!0,requires:[]};class n{constructor(){this.dead=!1,this.uuid=e.UUID.generate(),this.name=`ecs-entity#${n.prototype.$Props.instance}`,this.Components={},this.Manager=null,n.prototype.$Props.instance++}async addComponent(t,...e){const s=new t(this,...e);this.Components[s.constructor.name]=s,s.initComponent()}call(t,e,...s){return this.getComponent(t)[e](...s)}destroy(){for(const t in this.Components)this.Components[t].destroy();this.Components=null,this.Parent=null}findEntity(t){return this.Manager.get(t)}getComponent(t){return this.Components[t]}initEntity(){for(const t in this.Components)this.Components[t].initEntity()}setActive(t){this.Manager.setActive(this,t)}setManager(t){this.Manager=t}setName(t){this.name=t}update(t,e,s){for(const n in this.Components)this.Components[n].active&&this.Components[n].update(t,e,s)}}n.prototype.$Props={instance:0,isECSEntity:!0};class i{constructor(){this.ids=0,this.name=`ecs-manager#${i.prototype.$Props.instance}`,this.uuid=e.UUID.generate(),this.Assemblies={},this.Components={},this.Entities={array:[],map:{}},i.prototype.$Props.instance++}add(t,e){e||(e=this.generateName(t)),this.Entities.map[e]=t,this.Entities.array.push(t),t.setManager(this),t.setName(e),t.initEntity()}assemble(t,e,s){const n=s.assemblyArgs?s.assemblyArgs:[],i=new e(...s.entityArgs?s.entityArgs:[]),r=s.entityName?s.entityName:this.generateName(i);this.Assemblies[t](i,...n),this.add(i,r)}async assembleAsync(t,e,s={}){const n=s.assemblyArgs?s.assemblyArgs:[],i=new e(...s.entityArgs?s.entityArgs:[]),r=s.entityName?s.entityName:this.generateName(i);await this.Assemblies[t](i,...n),this.add(i,r)}createAssembly(t,e){this.Assemblies[t]=e}filter(t){return this.Entities.filter(t)}generateName(t){return this.ids++,`${t.constructor.name}-${this.ids}`}get(t){return this.Entities.map[t]}setActive(t,e){const s=this.Entities.array.indexOf(t);if(e){if(s>=0)return;this.Entities.array.push(t)}else{if(s<0)return;this.Entities.array.splice(s,1)}}update(t,e,s=!1){const n=[],i=[];for(let r=0;r<this.Entities.array.length;r++){const a=this.Entities.array[r];a.update(t,e,s),a.dead?i.push(a):n.push(a)}for(let t=0;t<i.length;t++){const e=i[t];delete this.Entities.map[e.name],e.destroy()}this.Entities.array=n}}i.prototype.$Props={instance:0,isECSManager:!0},exports.Component=s,exports.Entity=n,exports.Manager=i;
